generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model amendment {
  id          BigInt   @id @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  report_id   BigInt?
  description String?
  report      report?  @relation(fields: [report_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model district_stats_dev {
  id                BigInt    @id
  created_at        DateTime? @db.Timestamptz(6)
  updated_at        DateTime? @db.Timestamptz(6)
  district_id       BigInt
  year              BigInt
  month             BigInt
  vehicle_related   Int?      @db.SmallInt
  property_related  Int?      @db.SmallInt
  damaged_property  Int?      @db.SmallInt
  disorder_related  Int?      @db.SmallInt
  people_related    Int?      @db.SmallInt
  special_service   Int?      @db.SmallInt
  kms_travelled     Float?
  patrol_hours      Float?
  camera_hours      Float?
  training          Float?
  administration    Float?
  submitter_cpnz_id BigInt
}

model district_stats_prod {
  id                BigInt    @id(map: "district_stats_pkey")
  created_at        DateTime? @db.Timestamptz(6)
  updated_at        DateTime? @db.Timestamptz(6)
  district_id       BigInt
  year              BigInt
  month             BigInt
  vehicle_related   Int?      @db.SmallInt
  property_related  Int?      @db.SmallInt
  damaged_property  Int?      @db.SmallInt
  disorder_related  Int?      @db.SmallInt
  people_related    Int?      @db.SmallInt
  special_service   Int?      @db.SmallInt
  kms_travelled     Float?
  patrol_hours      Float?
  camera_hours      Float?
  training          Float?
  administration    Float?
  submitter_cpnz_id BigInt
}

model districts_dev {
  id          BigInt        @id
  created_at  DateTime?     @db.Timestamptz(6)
  updated_at  DateTime?     @db.Timestamptz(6)
  name        District      @unique @default(Mt_Roskill)
  email       String        @default("office@cpnz.org.nz")
  patrols_dev patrols_dev[]
}

model districts_prod {
  id           BigInt         @id(map: "districts_pkey")
  created_at   DateTime?      @db.Timestamptz(6)
  updated_at   DateTime?      @db.Timestamptz(6)
  name         String         @unique(map: "districts_name_key")
  email        String         @default("office@cpnz.org.nz")
  patrols_prod patrols_prod[]
}

model equipment_checklist {
  id                BigInt           @id(map: "EquipmentChecklist_pkey") @unique(map: "EquipmentChecklist_id_key") @default(autoincrement())
  hi_viz_uniform    Boolean
  first_aid_kit     Boolean
  torch_or_wand     Boolean
  fire_extinguisher Boolean
  road_cones        Boolean
  addtional_items   String[]
  note              String?
  vehicle_details   vehicle_details?
}

model guest_patrollers {
  id            BigInt  @id(map: "GuestPatrollers_pkey") @unique(map: "GuestPatrollers_id_key") @default(autoincrement())
  name          String
  is_registered Boolean
  member_id     BigInt?
  shift_id      BigInt
  shift         shift   @relation(fields: [shift_id], references: [id], map: "GuestPatrollers_shift_id_fkey")
}

model imports_dev {
  id                 BigInt    @id
  created_at         DateTime? @db.Timestamp(6)
  updated_at         DateTime? @db.Timestamp(6)
  short_patrol_name  String
  live_entries       String
  list_but_no_card   String
  cpnz_id            String
  entry_date         String
  current_card_count String
  surname            String
  first_names        String
  known_as           String
  dob                String
  gender             String
  driver_licence     String
  vetting_date       String
  business           String
  home               String
  cellular           String
  address            String
  suburb             String
  city               String
  post_code          String
  email              String
  patroller          String
  coordinator        String
  secretary          String
  training_officer   String
  nationality        String
  language           String
  skills2            String
  skills3            String
  skills4            String
  skills5            String
  skills6            String
  patrol_name        String
  district           String
}

model imports_prod {
  id                 BigInt    @id(map: "imports_pkey")
  created_at         DateTime? @db.Timestamp(6)
  updated_at         DateTime? @db.Timestamp(6)
  short_patrol_name  String
  live_entries       String
  list_but_no_card   String
  cpnz_id            String
  entry_date         String
  current_card_count String
  surname            String
  first_names        String
  known_as           String
  dob                String
  gender             String
  driver_licence     String
  vetting_date       String
  business           String
  home               String
  cellular           String
  address            String
  suburb             String
  city               String
  post_code          String
  email              String
  patroller          String
  coordinator        String
  secretary          String
  training_officer   String
  nationality        String
  language           String
  skills2            String
  skills3            String
  skills4            String
  skills5            String
  skills6            String
  patrol_name        String
  district           String
}

model incident_type {
  incident_category     String
  incident_sub_category String

  @@id([incident_category, incident_sub_category], map: "IncidentTypes_pkey")
}

model members_dev {
  id                                   BigInt        @id
  created_at                           DateTime?     @db.Timestamptz(6)
  updated_at                           DateTime?     @db.Timestamptz(6)
  active_member                        Int           @db.SmallInt
  patrol_id                            BigInt
  district_id                          BigInt
  cpnz_id                              BigInt
  surname                              String
  first_names                          String
  known_as                             String?
  date_of_birth                        String
  gender                               String
  nationality                          String
  driver_licence_number                String
  vetting_date                         String?
  business_phone                       String?
  home_phone                           String?
  mobile_phone                         String?
  address_line_1                       String
  suburb                               String
  city                                 String
  post_code                            String
  email                                String        @unique
  patroller                            Int           @db.SmallInt
  officer                              Int           @db.SmallInt
  officer_type                         String
  languages                            String?
  skills                               String?
  notes                                String?
  photo_id                             String
  constabulary                         Int           @default(1) @db.SmallInt
  qi                                   String?
  status                               String        @default("active")
  officer_patroller                    Int?          @db.SmallInt
  officer_patrol_leader_1              Int?          @db.SmallInt
  officer_patrol_leader_2              Int?          @db.SmallInt
  officer_secretary                    Int?          @db.SmallInt
  officer_patrol_trainer               Int?          @db.SmallInt
  officer_avp1                         Int?          @db.SmallInt
  officer_avp2                         Int?          @db.SmallInt
  officer_health_and_safety            Int?          @db.SmallInt
  officer_patrol_member_other          Int?          @db.SmallInt
  officer_district_leader              Int?          @db.SmallInt
  officer_district_trainer             Int?          @db.SmallInt
  officer_district_support_officer     Int?          @db.SmallInt
  officer_district_other               Int?          @db.SmallInt
  officer_cpnz_staff                   Int?          @db.SmallInt
  officer_probationer                  Int?          @db.SmallInt
  access_website                       Int?          @db.SmallInt
  trained                              Int           @default(0) @db.SmallInt
  new_nationality                      String        @default("Not known")
  treasurer                            Int?          @db.SmallInt
  call_sign                            Call_Sign     @default(MRCS)
  police_station                       PoliceStation @default(Mt_Roskill_Police_Station)
  password                             String
  logon_status                         LogonStatus   @default(No)
  patrols_dev                          patrols_dev   @relation(fields: [patrol_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shift_shift_driver_idTomembers_dev   shift[]       @relation("shift_driver_idTomembers_dev")
  shift_shift_observer_idTomembers_dev shift[]       @relation("shift_observer_idTomembers_dev")
}

model members_prod {
  id                               BigInt       @id(map: "members_pkey")
  created_at                       DateTime?    @db.Timestamptz(6)
  updated_at                       DateTime?    @db.Timestamptz(6)
  active_member                    Int          @db.SmallInt
  patrol_id                        BigInt
  district_id                      BigInt
  cpnz_id                          BigInt
  surname                          String
  first_names                      String
  known_as                         String?
  date_of_birth                    String
  gender                           String
  nationality                      String
  driver_licence_number            String
  vetting_date                     String?
  business_phone                   String?
  home_phone                       String?
  mobile_phone                     String?
  address_line_1                   String
  suburb                           String
  city                             String
  post_code                        String
  email                            String?
  patroller                        Int          @db.SmallInt
  officer                          Int          @db.SmallInt
  officer_type                     String
  languages                        String?
  skills                           String?
  notes                            String?
  photo_id                         String
  constabulary                     Int          @default(1) @db.SmallInt
  qi                               String?
  status                           String       @default("active")
  officer_patroller                Int?         @db.SmallInt
  officer_patrol_leader_1          Int?         @db.SmallInt
  officer_patrol_leader_2          Int?         @db.SmallInt
  officer_secretary                Int?         @db.SmallInt
  officer_patrol_trainer           Int?         @db.SmallInt
  officer_avp1                     Int?         @db.SmallInt
  officer_avp2                     Int?         @db.SmallInt
  officer_health_and_safety        Int?         @db.SmallInt
  officer_patrol_member_other      Int?         @db.SmallInt
  officer_district_leader          Int?         @db.SmallInt
  officer_district_trainer         Int?         @db.SmallInt
  officer_district_support_officer Int?         @db.SmallInt
  officer_district_other           Int?         @db.SmallInt
  officer_cpnz_staff               Int?         @db.SmallInt
  officer_probationer              Int?         @db.SmallInt
  access_website                   Int?         @db.SmallInt
  trained                          Int          @default(0) @db.SmallInt
  new_nationality                  String       @default("Not known")
  treasurer                        Int?         @db.SmallInt
  patrols_prod                     patrols_prod @relation(fields: [patrol_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "members_patrol_id_fkey")
}

model observations {
  id                            BigInt   @id(map: "Observations_pkey") @unique(map: "Observations_id_key") @default(autoincrement())
  start_time                    DateTime @db.Timestamptz(0)
  end_time                      DateTime @db.Timestamptz(0)
  location                      String
  is_police_or_security_present Boolean
  incident_category             String
  incident_sub_category         String
  description                   String
  report_id                     BigInt
  report                        report   @relation(fields: [report_id], references: [id], map: "Observations_report_id_fkey")
}

model patrols_dev {
  id            BigInt        @id @unique @default(autoincrement())
  created_at    DateTime?     @db.Timestamptz(6)
  updated_at    DateTime?     @db.Timestamptz(6)
  name          region
  active        Int           @db.SmallInt
  district_id   BigInt
  notes         String?
  call_sign     String?
  year_joined   String?
  email         String        @default("office@cpnz.org.nz")
  members_dev   members_dev[]
  districts_dev districts_dev @relation(fields: [district_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shift         shift[]
  vehicle       vehicle[]
  vehicle_dev   vehicle_dev[]
}

model patrols_prod {
  id             BigInt         @id(map: "patrols_pkey")
  created_at     DateTime?      @db.Timestamptz(6)
  updated_at     DateTime?      @db.Timestamptz(6)
  name           String
  active         Int            @db.SmallInt
  district_id    BigInt
  notes          String?
  call_sign      String?
  year_joined    String?
  email          String         @default("office@cpnz.org.nz")
  members_prod   members_prod[]
  districts_prod districts_prod @relation(fields: [district_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patrols_district_id_fkey")
}

model report {
  id                       BigInt         @id(map: "Report_pkey") @unique(map: "Report_id_key") @default(autoincrement())
  member_id                BigInt
  shift_id                 BigInt
  vehicle_details_id       BigInt
  odometer_initial_reading Int
  odometer_final_reading   Int
  weather_condition        Weather
  is_foot_patrol           Boolean
  notes                    String
  amendment                amendment[]
  observations             observations[]
}

model shift {
  id                                         BigInt             @id(map: "Shift_pkey") @unique(map: "Shift_id_key") @default(autoincrement())
  event_no                                   Int?
  patrol_id                                  BigInt
  start_time                                 DateTime           @db.Timestamptz(0)
  end_time                                   DateTime           @db.Timestamptz(0)
  police_station_base                        String
  observer_id                                BigInt
  driver_id                                  BigInt
  vehicle_id                                 BigInt
  guest_patrollers                           guest_patrollers[]
  members_dev_shift_driver_idTomembers_dev   members_dev        @relation("shift_driver_idTomembers_dev", fields: [driver_id], references: [id], map: "Shift_driver_id_fkey")
  members_dev_shift_observer_idTomembers_dev members_dev        @relation("shift_observer_idTomembers_dev", fields: [observer_id], references: [id], map: "Shift_observer_id_fkey")
  patrols_dev                                patrols_dev        @relation(fields: [patrol_id], references: [id], map: "Shift_patrol_id_fkey")
}

model stats_dev {
  id                BigInt    @id
  created_at        DateTime? @db.Timestamptz(6)
  updated_at        DateTime? @db.Timestamptz(6)
  patrol_id         BigInt
  year              Int       @db.SmallInt
  month             Int       @db.SmallInt
  vehicle_related   Int?      @db.SmallInt
  property_related  Int?      @db.SmallInt
  damaged_property  Int?      @db.SmallInt
  disorder_related  Int?      @db.SmallInt
  people_related    Int?      @db.SmallInt
  special_service   Int?      @db.SmallInt
  kms_travelled     Float?
  patrol_hours      Float?
  camera_hours      Float?
  training          Float?
  administration    Float?
  submitter_cpnz_id BigInt
}

model stats_prod {
  id                BigInt    @id(map: "stats_pkey")
  created_at        DateTime? @db.Timestamptz(6)
  updated_at        DateTime? @db.Timestamptz(6)
  patrol_id         BigInt
  year              Int       @db.SmallInt
  month             Int       @db.SmallInt
  vehicle_related   Int?      @db.SmallInt
  property_related  Int?      @db.SmallInt
  damaged_property  Int?      @db.SmallInt
  disorder_related  Int?      @db.SmallInt
  people_related    Int?      @db.SmallInt
  special_service   Int?      @db.SmallInt
  kms_travelled     Float?
  patrol_hours      Float?
  camera_hours      Float?
  training          Float?
  administration    Float?
  submitter_cpnz_id BigInt
}

model users_dev {
  id             BigInt    @id
  email          String    @unique
  password       String
  access_level   String
  member_id      BigInt
  remember_token String?
  created_at     DateTime? @db.Timestamptz(6)
  updated_at     DateTime? @db.Timestamptz(6)
  district       BigInt?
  patrol         BigInt?
}

model users_prod {
  id             BigInt    @id(map: "users_pkey")
  email          String    @unique(map: "users_email_key")
  password       String
  access_level   String
  member_id      BigInt
  remember_token String?
  created_at     DateTime? @db.Timestamptz(6)
  updated_at     DateTime? @db.Timestamptz(6)
  district       BigInt?
  patrol         BigInt?
}

model vehicle {
  id                    BigInt            @id(map: "Vehicle_pkey") @unique(map: "Vehicle_id_key") @default(autoincrement())
  patrol_id             BigInt
  registration_no       String            @unique(map: "Vehicle_registration_no_key")
  colour                String
  model                 String
  make                  String
  has_livery_or_signage Boolean
  has_police_radio      Boolean
  patrols_dev           patrols_dev       @relation(fields: [patrol_id], references: [id], map: "Vehicle_patrol_id_fkey")
  vehicle_details       vehicle_details[]
}

model vehicle_checklist {
  id                 BigInt           @id(map: "VehicleCheckList_pkey") @unique(map: "VehicleCheckList_id_key") @default(autoincrement())
  external_lighting  Boolean
  light_and_alley    Boolean
  dash_cam_operation Boolean
  note               String?
  vehicle_details    vehicle_details?
}

model vehicle_details {
  id                                  BigInt              @id(map: "VehicleDetails_pkey") @unique(map: "VehicleDetails_id_key") @default(autoincrement())
  vehicle_id                          BigInt
  has_wof                             Boolean
  has_registration                    Boolean
  isSafe                              Boolean
  has_visible_damage                  Boolean
  visible_damage_note                 String?
  vehicle_checkList_id                BigInt              @unique(map: "VehicleDetails_vehicle_checkList_id_key")
  equipment_checklist_id              BigInt              @unique(map: "VehicleDetails_equipment_checklist_id_key")
  is_vehicle_manager_attention_needed Boolean
  equipment_checklist                 equipment_checklist @relation(fields: [equipment_checklist_id], references: [id], map: "VehicleDetails_equipment_checklist_id_fkey")
  vehicle_checklist                   vehicle_checklist   @relation(fields: [vehicle_checkList_id], references: [id], map: "VehicleDetails_vehicle_checkList_id_fkey")
  vehicle                             vehicle             @relation(fields: [vehicle_id], references: [id], map: "VehicleDetails_vehicle_id_fkey")
}

model vehicle_dev {
  name                String         @id @default("")
  created_at          DateTime       @default(now()) @db.Timestamptz(6)
  model               String
  registration_number String
  colour              String?
  livery              Boolean?
  patrolID            BigInt
  selected            Boolean        @default(false)
  id                  Int            @default(2)
  vehicles_model      vehicles_model @relation(fields: [model], references: [name], onDelete: NoAction, onUpdate: NoAction)
  patrols_dev         patrols_dev    @relation(fields: [patrolID], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model vehicle_make {
  name           String           @id(map: "Vehicle_Make_pkey") @default("")
  vehicles_model vehicles_model[]
}

model vehicles_model {
  name         String        @id(map: "Vehicles_Model_pkey")
  model_name   String?
  vehicle_dev  vehicle_dev[]
  vehicle_make vehicle_make? @relation(fields: [model_name], references: [name], onDelete: NoAction, onUpdate: NoAction, map: "Vehicles_Model_model_name_fkey")
}

enum Call_Sign {
  MRCS
  MACS

  @@map("Call Sign")
}

enum District {
  Mt_Albert  @map("Mt Albert")
  Mt_Roskill @map("Mt Roskill")
  Epsom
  Howick
}

enum LogonStatus {
  No
  Pending
  Yes
}

enum PoliceStation {
  Mt_Roskill_Police_Station @map("Mt Roskill Police Station")
  Mt_Albert_Police_Station  @map("Mt Albert Police Station")
}

enum Role {
  patrol
  lead
  admin
}

enum Weather {
  Wet
  Dry
}

enum logType {
  logOn
  logOff
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum region {
  Mt_Roskill @map("Mt Roskill")
  Mt_Albert  @map("Mt Albert")
  Howick
}
